<%- is_new_record = assigned_task.new_record? %>
<%# TODO: Remove this funny checks here %>
<%- form_url = is_new_record ? workspace_project_assigned_tasks_path(project) : workspace_project_assigned_task_path(id: assigned_task.id, project_id: assigned_task.project_id) %>
<%- form_method = is_new_record ? :post : :put %>
<%= render PhlexUI::Dialog.new(open: true, data: { controller: "custom-dialog" }) do %>
  <%= render PhlexUI::Dialog::Trigger.new(class: "hidden", data: { custom_dialog_target: "trigger" }) do %>
    <%= render PhlexUI::Button.new { "Open Dialog" } %>
  <% end %>
  <%= render PhlexUI::Dialog::Content.new(class: "bg-white") do %>
    <%= turbo_frame_tag :modal do %>
      <%= form_with url: form_url, method: form_method, scope: assigned_task do |form| %>
        <div class="flex flex-col gap-y-4">
          <span class="font-semibold text-gray-600 text-lg"><%= is_new_record ? "Add task to #{project.name}" : "Edit #{assigned_task.task.name}" %></span>
          <%= content_tag(:div, class: "flex flex-col gap-y-4") do %>
            <%= form.fields_for :task do |task_form|%>
              <% if is_new_record %>
                <%= render PhlexUI::Form::Item.new do  %>
                  <%= render PhlexUI::Label.new { "Select task" } %>
                  <div class="flex flex-row gap-x-4">
                    <%= render PhlexUI::Select.new do  %>
                      <%= render PhlexUI::Select::Input.new(value: :id, id: "select-new-task", name: "assigned_task[task_attributes][id]") %>
                      <%= render PhlexUI::Select::Trigger.new(class: "!border-gray-200") do %>
                        <%= render PhlexUI::Select::Value.new(placeholder: 'Select task', id: "select-new-task") { "Select task" } %>
                      <% end %>
                      <%= render PhlexUI::Select::Content.new(outlet_id: "select-new-task") do %>
                        <%= render PhlexUI::Select::Group.new do %>
                          <% unassigned_tasks.each do |task| %>
                            <%= render PhlexUI::Select::Item.new(value: task.id) { task.name } %>
                          <% end %>
                        <% end %>
                      <% end %>
                    <% end %>
                  </div>
                  <% assigned_task.errors.full_messages_for(:task_id).each do |message|%>
                    <%= render PhlexUI::InputError.new(class: "w-full text-red-600 italic text-xs") { message }  %>
                  <% end %>
                <% end %>
              <% else %>
                <%= render PhlexUI::Form::Item.new(class: "flex flex-col") do  %>
                  <%= render PhlexUI::Label.new { "Name" } %>
                  <%= task_form.text_field :name, class: "border-gray-200 rounded-md" %>
                  <% assigned_task.errors.full_messages_for(:name).each do |message|%>
                    <%= render PhlexUI::InputError.new(class: "w-full text-red-600 italic text-xs") { message }  %>
                  <% end %>
                <% end %>
              <% end %>
            <% end %>

            <%= render PhlexUI::Form::Item.new(class: "flex flex-col") do  %>
              <%= render PhlexUI::Label.new { "Billable Rate (per hour) (NOK)" } %>
              <%= render PhlexUI::Hint.new { "This is optional, otherwise Project rate should be applied" } %>
              <%= form.text_field :rate_nok, class: "border-gray-200 rounded-md" %>
            <% end %>
            <%= render AlertComponent.new(variant: :warning, title: "Warning!", message: "Kindly note that edits to the task name will be applied to all the projects. Edits to the billable rate will be applied to this project only and will take effect on new Time registrations.") unless is_new_record  %>
          <% end %>
          <div class="mt-4 w-full">
            <%= render ButtonComponent.new(type: :submit, class: "w-full") { is_new_record ? "Add" : "Update" } %>
          </div>
        </div>
      <% end %>
      <% if is_new_record %>
        <%= render PhlexUI::Dialog::Footer.new(class: "mt-4 pt-4 border-t border-gray-100") do %>
          <div class="py-2 font-medium flex flex-row gap-x-1 justify-end text-sm">
            <span>Can't find what you're looking for?</span>
            <%= render ButtonComponent.new(path: new_modal_workspace_project_tasks_path(project), method: :post, variant: :link, class!: "underline text-primary") do %>
              <span class="mr-2">Add New</span>
            <% end %>
          </div>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
