<%# TODO: Convert into reusable turbo_confirm component that can be triggered with `turbo_confirm` and remove this duplication %>
<%= render PhlexUI::AlertDialog.new(open: true, data: { controller: "custom-dialog" }) do %>
  <%= render PhlexUI::AlertDialog::Trigger.new(class: "hidden", data: { custom_dialog_target: "trigger" }) do %>
    <%= render PhlexUI::Button.new { "Show dialog" } %>
  <% end %>
  <%= render PhlexUI::AlertDialog::Content.new do %>
    <%= turbo_frame_tag :modal do %>
      <%= render PhlexUI::AlertDialog::Header.new do %>
        <%= render PhlexUI::AlertDialog::Title.new { t("notice.are_you_sure") } %>
        <%= render PhlexUI::AlertDialog::Description.new do  %>
          <% if @task.assigned_tasks.any? %>
            <span>
              <%= t("description.the_task") %> <span class="font-semibold text-primary"><%= @task.name %></span> <%= t("description.assigned_to_project") %>
            </span>
          <% else %>
            <span>
              <%= t("description.proceed_deletion_of_the_task")%> <span class="font-semibold text-primary"><%= @task.name %></span>, <%= t("description.cannot_be_undone") %>
            </span>
          <% end %>
        <% end %>
      <% end %>
      <%= render PhlexUI::AlertDialog::Footer.new(class: "mt-4") do %>
        <%= render PhlexUI::AlertDialog::Cancel.new(class: "!border-gray-100 !h-12") { t("common.cancel") } %>
        <%= render ButtonComponent.new(variant: :destructive, path: workspace_task_path(@task), method: :delete, disabled: @task.assigned_tasks.any?) { t("common.continue") } %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
